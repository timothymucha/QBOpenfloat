# -*- coding: utf-8 -*-
"""QBOpenfloat.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1kNAgWRrfZtbIHzWh3pX5FOVD19X2ta5T
"""

import streamlit as st
import pandas as pd
from io import StringIO

def generate_iif(df):
    output = StringIO()

    # Write the header including !ENDTRNS
    output.write("!TRNS\tTRNSTYPE\tDATE\tACCNT\tNAME\tAMOUNT\tMEMO\n")
    output.write("!SPL\tTRNSTYPE\tDATE\tACCNT\tNAME\tAMOUNT\tMEMO\n")
    output.write("!ENDTRNS\n")

    for _, row in df.iterrows():
        # Skip non-successful
        if row['Transaction Status'].strip().lower() != 'successful':
            continue

        tr_type = row['Transaction Type'].strip()
        date = pd.to_datetime(row['Transaction Date']).strftime('%m/%d/%Y')
        payee = row['Payee'].split()[0]  # Remove paybill if included
        memo = f"{payee} - {row['Remark']}"
        amount = float(row['Amount'])

        if tr_type == "Payment":
            # Treat as Bill Payment from Openfloat
            output.write(f"TRNS\tBILLPMT\t{date}\tOpenfloat\t{payee}\t{-amount}\t{memo}\n")
            output.write(f"SPL\tBILLPMT\t{date}\tAccounts Payable\t{payee}\t{amount}\t{memo}\n")
            output.write("ENDTRNS\n")

        elif tr_type == "PesapalWithdrawal":
            # Transfer from Pesapal to Openfloat
            output.write(f"TRNS\tGENERAL JOURNAL\t{date}\tPesapal\tTransfer\t{-amount}\t{memo}\n")
            output.write(f"SPL\tGENERAL JOURNAL\t{date}\tOpenfloat\tTransfer\t{amount}\t{memo}\n")
            output.write("ENDTRNS\n")

        elif tr_type in ["Charges", "Commission"]:
            # Bank fee from Openfloat
            output.write(f"TRNS\tCHECK\t{date}\tOpenfloat\tBank Charges\t{-amount}\t{memo}\n")
            output.write(f"SPL\tCHECK\t{date}\tBank Service Charges\tBank Charges\t{amount}\t{memo}\n")
            output.write("ENDTRNS\n")

    return output.getvalue()


# Streamlit UI
st.title("Pesapal to QuickBooks IIF Converter")
uploaded_file = st.file_uploader("Upload Pesapal CSV", type=["csv"])

if uploaded_file:
    df = pd.read_csv(uploaded_file)
    st.subheader("Preview of Uploaded Data")
    st.dataframe(df.head())

    iif_data = generate_iif(df)

    st.subheader("Generated IIF Preview")
    st.code(iif_data, language="text")

    st.download_button("Download IIF File", data=iif_data, file_name="pesapal_export.iif", mime="text/plain")